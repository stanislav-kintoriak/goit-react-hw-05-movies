{"version":3,"file":"static/js/50.5d9081e4.chunk.js","mappings":"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","sources":["api/api.js","components/LoadMore/LoadMoreButton.styled.jsx","components/LoadMore/LoadMoreButton.jsx","components/PopularMoviesList/MoviesList.jsx","components/pages/Home/HomePage.styled.jsx","components/pages/Home/HomePage.jsx"],"sourcesContent":["import axios from 'axios'\n\nconst API_URL = 'https://api.themoviedb.org/3'\nconst API_KEY = '592c5fa13d6af61a1d8c8304650d9e60'\n\nconst DEFAULT_IMAGE = 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/495px-No-Image-Placeholder.svg.png?20200912122019'\n\n\n\n// Функція, що дістає список популярних фільмів\nexport const getPopularMovies = async pageNumber  => {\n\nconst data = await axios (\n    `${API_URL}/trending/movie/day?api_key=${API_KEY}&page=${\n      pageNumber ? pageNumber : 1\n    }`\n  );\n\n\n  return data;\n}\n\n\n// Функція, яка запитує дані з Api за пошуковим запитом\n\n\nexport const getMoviesByQuery = async (query,pageNumber) => {\n    const data = await axios(\n        `${API_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${\n          pageNumber ? pageNumber : 1\n        }`\n      );\n\n\n    return data;\n}\n\n// Функція, яка повертає дані про фільм\n\nexport const getMoviesDetails = moviesArr => {\n  return moviesArr.map(movie => {\n    const movieInfo = {\n      title: movie.title ? movie.title : movie.name,\n      w300imgUrl: movie.poster_path\n        ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n        : DEFAULT_IMAGE,\n      w500imgUrl: movie.poster_path\n        ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n        : DEFAULT_IMAGE,\n      year: movie.release_date\n        ? movie.release_date.slice(0, 4)\n        : movie?.first_air_date?.slice(0, 4) || '',\n      id: movie.id,\n    };\n    return movieInfo;\n  });\n};\n\n\n\n// Функція, яка повертає дані про фільм отримуючи id\nexport const getMovieById = async id => {\n  const data = await axios(\n    `${API_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\n\n// Функція, яка повертає дані про акторів отримуючи id фільму\nexport const getCastInfo = async id => {\n  const data = await axios(\n    `${API_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\n\n\nexport const getActorInfoData = actorsArr => {\n  return actorsArr.map(actor => {\n    const actorInfo = {\n      name: actor.name ? actor.name : actor.original_name,\n      w300imgUrl: actor.poster_path\n        ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n        : DEFAULT_IMAGE,\n      w500imgUrl: actor.profile_path\n        ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n        : DEFAULT_IMAGE,\n      character: actor.character,\n      id: actor.id,\n    };\n    return actorInfo;\n  });\n};\n\n\n// Функція, яка повертає дані про відгуки отримуючи id фільму\n\nexport const getReviews = async id => {\n  const data = await axios(\n    `${API_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n\n\n\n\nexport const getReviewsInfo = reviewsArr => {\n  return reviewsArr.map(review => {\n    const reviewInfo = {\n      author: review.author,\n      content: review.content,\n      id: review.id,\n    };\n    return reviewInfo;\n  });\n};\n\n\nexport const getMovieDetails = movie => {\n  let genres = movie.genres.map(elem => elem.name);\n  let cutGenres;\n  if (genres.length === 0) {\n    cutGenres = 'Other';\n  } else if (genres.length <= 2) {\n    cutGenres = genres.join(', ');\n  } else {\n    cutGenres = `${genres.slice(0, 2).join(', ')}, Other`;\n  }\n  return {\n    title: movie.title ? movie.title : movie.name, //назва\n    titleOriginal: movie.original_title, // оригінальна назва\n    popularity: movie.popularity, //популярність\n    vote: movie.vote_average, // середній рейтинг\n    votes: movie.vote_count, // кількість голосів\n    w300imgUrl: movie.poster_path\n      ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n      : DEFAULT_IMAGE, // постер, або дефолтна картинка за відсутності постера\n    w500imgUrl: movie.poster_path\n      ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n      : DEFAULT_IMAGE, // постер, або дефолтна картинка за відсутності постера\n    genres: cutGenres, // жанри\n    about: movie.overview,\n    year: movie.release_date\n      ? movie.release_date.slice(0, 4)\n      : movie?.first_air_date?.slice(0, 4) || '',\n  };\n};","import styled from '@emotion/styled';\n\nexport const LoadMoreButton = styled.button`\n  display: inline-block;\n  margin: auto;\n  background-color:#FFFFFF;\n  border-radius: 4px;\n  margin-bottom: 25px;\n  color: #000000;\n  display: flex;\n  font-size: 16px;\n  padding: 5px;\n  justify-content: center;\n  text-decoration: none;\n  border: 0;\n  cursor: pointer;\n  \n  &:hover,\n  &:focus {\n    background-color: aqua;`\n\n","import { LoadMoreButton } from './LoadMoreButton.styled';\nimport PropTypes from 'prop-types';\n\nconst ButtonLoadMore = ({ onLoadMore }) => {\n  return (\n    <LoadMoreButton type=\"button\" onClick={onLoadMore}>\n      Load more\n    </LoadMoreButton>\n  );\n};\n\nButtonLoadMore.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default ButtonLoadMore;\n","import PropTypes from 'prop-types';\nconst { useLocation, Link } = require('react-router-dom');\n\nconst MoviesList = ({ movies }) => {\n          const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => {\n\n\n        return (\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            <li>\n              <h3>{movie.title}</h3>\n            </li>\n          </Link>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      w300imgUrl: PropTypes.string.isRequired,\n      w500imgUrl: PropTypes.string.isRequired,\n      year: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  max-width: 1280px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 10px;\n  padding-right: 10px;\n\n  @media (min-width: 768px) {\n    width: 768px;\n  }\n  @media (min-width: 1280px) {\n    width: 1280px;\n  }\n`;","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Loader from '../../Loader/Loader';\nimport MoviesList from '../../PopularMoviesList/MoviesList';\nimport { getMoviesDetails, getPopularMovies } from '../../../api/api'\nimport ButtonLoadMore from '../../LoadMore/LoadMoreButton';\nimport { Title } from './HomePage.styled';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsloading] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  const homeLocation = useLocation();\n\n  useEffect(() => {\n    setIsloading(true);\n\n    getPopularMovies(page)\n      .then(response => {\n        if (response.status !== 200) {\n          throw new Error(`Error: ${response.status}`);\n        }\n        setTotalPages(response.data.total_pages);\n\n        setMovies(prevState => [\n          ...prevState,\n          ...getMoviesDetails(response.data.results),\n        ]);\n      })\n      .catch(e => console.error(e))\n      .finally(() => setIsloading(false));\n  }, [page]);\n\n\n  const onLoadMore = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {!isLoading && (\n        <div>\n          <Title>Trending today</Title>\n\n          {movies.length && (\n            <>\n              <MoviesList movies={movies} location={homeLocation} />\n              {page < totalPages && <ButtonLoadMore onLoadMore={onLoadMore} />}\n            </>\n          )}\n        </div>\n      )}\n    </>\n  )\n};\n\nexport default HomePage;\n\n\n\n\n\n\n\n\n\n\n"],"names":["API_URL","API_KEY","DEFAULT_IMAGE","getPopularMovies","pageNumber","axios","data","getMoviesByQuery","query","getMoviesDetails","moviesArr","map","movie","title","name","w300imgUrl","poster_path","w500imgUrl","year","release_date","slice","first_air_date","id","getMovieById","getCastInfo","getActorInfoData","actorsArr","actor","original_name","profile_path","character","getReviews","getReviewsInfo","reviewsArr","review","author","content","getMovieDetails","cutGenres","genres","elem","length","join","titleOriginal","original_title","popularity","vote","vote_average","votes","vote_count","about","overview","LoadMoreButton","styled","onLoadMore","type","onClick","require","useLocation","Link","movies","location","to","state","from","Title","useState","setMovies","page","setPage","isLoading","setIsloading","totalPages","setTotalPages","homeLocation","useEffect","then","response","status","Error","total_pages","prevState","results","catch","e","console","error","finally","Loader","MoviesList"],"sourceRoot":""}