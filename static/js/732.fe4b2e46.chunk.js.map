{"version":3,"file":"static/js/732.fe4b2e46.chunk.js","mappings":"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","sources":["api/api.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","components/pages/MovieInfo/MovieInfo.styled.jsx","components/pages/MovieInfo/MovieInfo.jsx"],"sourcesContent":["import axios from 'axios'\n\nconst API_URL = 'https://api.themoviedb.org/3'\nconst API_KEY = '592c5fa13d6af61a1d8c8304650d9e60'\n\nconst DEFAULT_IMAGE = 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/495px-No-Image-Placeholder.svg.png?20200912122019'\n\n\n\n// Функція, що дістає список популярних фільмів\nexport const getPopularMovies = async pageNumber  => {\n\nconst data = await axios (\n    `${API_URL}/trending/movie/day?api_key=${API_KEY}&page=${\n      pageNumber ? pageNumber : 1\n    }`\n  );\n\n\n  return data;\n}\n\n\n// Функція, яка запитує дані з Api за пошуковим запитом\n\n\nexport const getMoviesByQuery = async (query,pageNumber) => {\n    const data = await axios(\n        `${API_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${\n          pageNumber ? pageNumber : 1\n        }`\n      );\n\n\n    return data;\n}\n\n// Функція, яка повертає дані про фільм\n\nexport const getMoviesDetails = moviesArr => {\n  return moviesArr.map(movie => {\n    const movieInfo = {\n      title: movie.title ? movie.title : movie.name,\n      w300imgUrl: movie.poster_path\n        ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n        : DEFAULT_IMAGE,\n      w500imgUrl: movie.poster_path\n        ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n        : DEFAULT_IMAGE,\n      year: movie.release_date\n        ? movie.release_date.slice(0, 4)\n        : movie?.first_air_date?.slice(0, 4) || '',\n      id: movie.id,\n    };\n    return movieInfo;\n  });\n};\n\n\n\n// Функція, яка повертає дані про фільм отримуючи id\nexport const getMovieById = async id => {\n  const data = await axios(\n    `${API_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\n\n// Функція, яка повертає дані про акторів отримуючи id фільму\nexport const getCastInfo = async id => {\n  const data = await axios(\n    `${API_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\n\n\nexport const getActorInfoData = actorsArr => {\n  return actorsArr.map(actor => {\n    const actorInfo = {\n      name: actor.name ? actor.name : actor.original_name,\n      w300imgUrl: actor.poster_path\n        ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n        : DEFAULT_IMAGE,\n      w500imgUrl: actor.profile_path\n        ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n        : DEFAULT_IMAGE,\n      character: actor.character,\n      id: actor.id,\n    };\n    return actorInfo;\n  });\n};\n\n\n// Функція, яка повертає дані про відгуки отримуючи id фільму\n\nexport const getReviews = async id => {\n  const data = await axios(\n    `${API_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n\n\n\n\nexport const getReviewsInfo = reviewsArr => {\n  return reviewsArr.map(review => {\n    const reviewInfo = {\n      author: review.author,\n      content: review.content,\n      id: review.id,\n    };\n    return reviewInfo;\n  });\n};\n\n\nexport const getMovieDetails = movie => {\n  let genres = movie.genres.map(elem => elem.name);\n  let cutGenres;\n  if (genres.length === 0) {\n    cutGenres = 'Other';\n  } else if (genres.length <= 2) {\n    cutGenres = genres.join(', ');\n  } else {\n    cutGenres = `${genres.slice(0, 2).join(', ')}, Other`;\n  }\n  return {\n    title: movie.title ? movie.title : movie.name, //назва\n    titleOriginal: movie.original_title, // оригінальна назва\n    popularity: movie.popularity, //популярність\n    vote: movie.vote_average, // середній рейтинг\n    votes: movie.vote_count, // кількість голосів\n    w300imgUrl: movie.poster_path\n      ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n      : DEFAULT_IMAGE, // постер, або дефолтна картинка за відсутності постера\n    w500imgUrl: movie.poster_path\n      ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n      : DEFAULT_IMAGE, // постер, або дефолтна картинка за відсутності постера\n    genres: cutGenres, // жанри\n    about: movie.overview,\n    year: movie.release_date\n      ? movie.release_date.slice(0, 4)\n      : movie?.first_air_date?.slice(0, 4) || '',\n  };\n};","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  box-shadow: 0px 10px 10px 4px rgba(0, 0, 0, 0.60);\n  margin-bottom: 25px;\n  height: 700px;\n  background: linear-gradient(to left, #F0AB9C 10%, transparent 100%),\n    url(${props => props.w500imgUrl});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  border-radius: 2px;\n  @media (min-width: 768px) {\n    height: 550px;\n  }\n\n  @media (min-width: 1280px) {\n    height: 600px;\n    background: linear-gradient(to left, #F0AB9C 10%, transparent 100%),\n      url(${props => props.w500imgUrl});\n    background-repeat: no-repeat;\n    background-position: left;\n    background-size: contain;\n  }\n\n  & img {\n    display: block;\n    float: right;\n    overflow: hidden;\n  }\n`;\n\nexport const Details = styled.div`\n  width: 100%;\n  margin-left: auto;\n  padding: 10px;\n  @media (min-width: 1280px) {\n    padding: 25px;\n\n    width: 70%;\n  }\n\n  & h1 {\n    text-transform: uppercase;\n    color: red;\n    font-family: 'Montserrat', sans-serif;\n    font-weight: 400;\n    text-align: left;\n    font-size: 24px;\n    letter-spacing: 2px;\n    @media (min-width: 1280px) {\n      padding: 0 0 0 25px;\n\n      margin: 25px 0 0 0;\n\n      font-size: 24px;\n    }\n    @media (min-width: 1280px) {\n      font-size: 38px;\n    }\n  }\n  & h2 {\n    color: #000000;\n    font-family: 'Montserrat', sans-serif;\n    font-weight: 400;\n    text-align: left;\n    font-size: 20px;\n\n    letter-spacing: 2px;\n    @media (min-width: 768px) {\n      margin: 30px 0 0 0;\n      padding: 0 0 0 40px;\n      font-size: 26px;\n    }\n    @media (min-width: 1280px) {\n      font-size: 30px;\n      margin-bottom: 30px;\n    }\n  }\n  & h3 {\n    font-weight: 700;\n  }\n  & ul {\n    list-style-type: none;\n    margin: 10px 0 0 0;\n    padding-left: 0;\n    @media (min-width: 768px) {\n      padding: 0 0 0 30px;\n\n      font-size: 28px;\n      display: flex;\n      gap: 10px;\n      margin-bottom: 30px;\n    }\n\n    & li {\n      display: inline;\n      color: black;\n      font-family: 'Montserrat', sans-serif;\n      font-weight: 400;\n      font-size: 18px;\n      margin: 0;\n      padding: 0;\n      /* display: flex;\n      gap: 10px; */\n      @media (min-width: 1280px) {\n        padding: 0 30px 0 0;\n      }\n    }\n  }\n  & p,\n  & h3 {\n    color: black;\n    font-family: 'Montserrat', sans-serif;\n    font-size: 16px;\n    letter-spacing: 1px;\n    margin: 10px 0 10px 0;\n    line-height: 20px;\n    /* margin: 0; */\n    padding: 0;\n    @media (min-width: 1280px) {\n      padding: 0 30px 0 40px;\n    }\n  }\n`;","import { Details, Container } from './MovieDetails.styled';\n// import PropTypes from 'prop-types';\n\nconst MovieDetails = ({\n    movie: {\n      title,\n      titleOriginal,\n      popularity,\n      vote,\n      votes,\n      w500imgUrl,\n      genres,\n      about,\n    }\n\n\n  }) => {\n    return (\n      <Container w500imgUrl={w500imgUrl}>\n        <Details>\n          <h1>{title}</h1>\n          <h2>Original Title: {titleOriginal}</h2>\n  \n          <ul>\n            <li>\n              <h3> Votes</h3>\n              <p>\n                <span>{vote}</span>/<span>{votes}</span>\n              </p>\n            </li>\n            <li>\n              <h3>Popularity</h3>\n              <p>{popularity}</p>\n            </li>\n            <li>\n              <h3>Genre</h3>\n              <p>{genres}</p>\n            </li>\n          </ul>\n          <p>About</p>\n          <p>{about}</p>\n        </Details>\n      </Container>\n    );\n  };\n  \n  // MovieInfo.propTypes = {\n  //   movie: PropTypes.shape({\n  //     title: PropTypes.string.isRequired,\n  //     titleOriginal: PropTypes.string.isRequired,\n  //     popularity: PropTypes.number.isRequired,\n  //     vote: PropTypes.number.isRequired,\n  //     votes: PropTypes.number.isRequired,\n  //     w500imgUrl: PropTypes.string.isRequired,\n  //     genres: PropTypes.string.isRequired,\n  //     about: PropTypes.string.isRequired,\n  //   }).isRequired,\n  // };\n  \n  export default MovieDetails;","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Page = styled.div`\n\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 25px;\n  padding-right: 25px;\n  }\n`;\n\nexport const AddContainer = styled.div`\n\n  & ul {\n    list-style-type: none;\n    padding: 0 0 0 40px;\n    margin: 12px 0 0 0;\n    display: flex;\n    gap: 10px;\n    margin-bottom: 40px;\n\n    & li {\n      display: inline;\n      color: #000000;\n      font-family: 'Montserrat', sans-serif;\n      font-weight: 400;\n      font-size: 20px;\n      padding: 0 45px 0 0;\n      transition: all 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n      &:hover,\n      &:focus {\n        transform: scale(1.1);\n      }\n      & a {\n        text-decoration: none;\n        /* & .active {\n          color: red;\n          border-bottom: 2px solid #000000;\n        } */\n      }\n    }\n  }\n  & p,\n  & h3 {\n    color: #000000;\n    font-family: 'Montserrat', sans-serif;\n    font-size: 18px;\n  }\n`;\n\nexport const BackButton = styled(Link)`\n  display: inline-block;\n  width: 100px;\n  margin-right: auto;\n  margin-bottom: 6px;\n  border-radius: 4px;\n  box-sizing: border-box;\n  color: #000000;\n  display: flex;\n  font-size: 16px;\n  justify-content: center;\n  padding: 5px;\n  text-decoration: none;\n  border: 0;\n  cursor: pointer;\n\n\n  &:hover,\n  &:focus {\n    background-color: aqua;\n  }\n`;","import MovieDetails from 'components/MovieDetails/MovieDetails';\nimport { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById, getMovieDetails} from '../../../api/api';\nimport { AddContainer, BackButton, Page } from './MovieInfo.styled';\nimport Loader from '../../Loader/Loader';\n\nconst MovieInfo = () => {\n    const { movieId } = useParams();\n    const [MovieInfo, setMovieInfo] = useState(null);\n    const [isLoading, setIsloading] = useState(false);\n  \n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? '/movies';\n\n\n    useEffect(() => {\n        setIsloading(true);\n    \n        getMovieById(movieId)\n          .then(response => {\n            if (response.status !== 200) {\n              throw new Error(`Error: ${response.status}`);\n            }\n            setMovieInfo(getMovieDetails(response.data));\n          })\n          .catch(e => console.error(e))\n          .finally(() => setIsloading(false));\n      }, [movieId]);\n\n      return (\n        <Page>\n          {isLoading && <Loader />}\n          <BackButton to={backLinkHref}>Back</BackButton>\n    \n          {MovieInfo && !isLoading && (\n            <>\n              <MovieDetails movie={MovieInfo} />\n              <AddContainer>\n                <h3>Additional information</h3>\n                <ul>\n                  <li>\n                    <Link to=\"cast\" state={{ ...location.state }}>\n                      <p>Cast</p>\n                    </Link>\n                  </li>\n                  <li>\n                    <Link to=\"reviews\" state={{ ...location.state }}>\n                      <p>Reviews</p>\n                    </Link>\n                  </li>\n                </ul>\n              </AddContainer>\n              <Outlet />\n            </>\n          )}\n          {/* {!MovieInfo && !isLoading && <PlaceholderSerch />} */}\n        </Page>\n      );\n    };\n\n\n\n\n\nexport default MovieInfo;"],"names":["API_URL","API_KEY","DEFAULT_IMAGE","getPopularMovies","pageNumber","axios","data","getMoviesByQuery","query","getMoviesDetails","moviesArr","map","movie","title","name","w300imgUrl","poster_path","w500imgUrl","year","release_date","slice","first_air_date","id","getMovieById","getCastInfo","getActorInfoData","actorsArr","actor","original_name","profile_path","character","getReviews","getReviewsInfo","reviewsArr","review","author","content","getMovieDetails","cutGenres","genres","elem","length","join","titleOriginal","original_title","popularity","vote","vote_average","votes","vote_count","about","overview","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","source","forEach","key","defineProperty","getOwnPropertyDescriptors","defineProperties","Container","styled","props","Details","Page","AddContainer","BackButton","Link","movieId","useParams","useState","MovieInfo","setMovieInfo","isLoading","setIsloading","location","useLocation","backLinkHref","state","from","useEffect","then","response","status","Error","catch","e","console","error","finally","Loader","to"],"sourceRoot":""}